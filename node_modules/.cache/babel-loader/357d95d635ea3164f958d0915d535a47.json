{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\sweet-pumpkins\\\\src\\\\Screens\\\\MovieDetails\\\\MovieDetails.js\";\nimport React from \"react\";\nimport \"./MovieDetails.css\";\nimport LoadingMovie from \"../../Components/LoadingMovie\";\n\nclass MovieDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      movie: {}\n    };\n  }\n\n  componentDidMount() {\n    const movieId = this.props.match.params.movieId;\n    const movieUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`;\n    fetch(movieUrl).then(response => response.json()).then(data => this.setState({\n      movie: data,\n      isLoading: false\n    })).catch(error => console.log(\"Error:\", error));\n  }\n\n  render() {\n    const _this$state$movie = this.state.movie,\n          title = _this$state$movie.title,\n          backdrop_path = _this$state$movie.backdrop_path,\n          release_date = _this$state$movie.release_date,\n          genres = _this$state$movie.genres,\n          overview = _this$state$movie.overview,\n          vote_average = _this$state$movie.vote_average,\n          runtime = _this$state$movie.runtime;\n    const releaseYear = release_date ? release_date.substring(0, 4) : null;\n    const imgUrl = `http://image.tmdb.org/t/p/w1280/${backdrop_path}`;\n    const backdropStyle = {\n      backgroundImage: `url(${imgUrl})`\n    };\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, isLoading ? React.createElement(LoadingMovie, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"movie-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-image\",\n      style: backdropStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"movie-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, title, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"(\", releaseYear, \")\")), React.createElement(\"section\", {\n      className: \"genres\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, genres.map((genre, index) => React.createElement(\"div\", {\n      key: genre.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, genre.name), index < genres.length - 1 && React.createElement(\"span\", {\n      className: \"separator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"|\")))), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Rating:\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, vote_average)), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Runtime:\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, `${runtime} min`)), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Overview\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, overview), React.createElement(\"div\", {\n      style: {\n        backgroundImage: `url(http://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg)`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["C:/Users/franc/sweet-pumpkins/src/Screens/MovieDetails/MovieDetails.js"],"names":["React","LoadingMovie","MovieDetails","Component","constructor","props","state","isLoading","movie","componentDidMount","movieId","match","params","movieUrl","process","env","REACT_APP_TMDB_API_KEY","fetch","then","response","json","data","setState","catch","error","console","log","render","title","backdrop_path","release_date","genres","overview","vote_average","runtime","releaseYear","substring","imgUrl","backdropStyle","backgroundImage","map","genre","index","id","name","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./MovieDetails.css\";\r\nimport LoadingMovie from \"../../Components/LoadingMovie\";\r\n\r\n\r\nclass  MovieDetails extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoading: true,\r\n            movie:{},\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {movieId } = this.props.match.params;\r\n        const movieUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`;\r\n        fetch(movieUrl)\r\n        .then( response => response.json())\r\n        .then(data => this.setState({movie: data, isLoading: false}))\r\n        .catch(error => console.log(\"Error:\", error));\r\n    }\r\n\r\n    render() {\r\n        const { title, \r\n                backdrop_path,\r\n                release_date,\r\n                genres,\r\n                overview,\r\n                vote_average,\r\n                runtime } = this.state.movie;\r\n        const releaseYear = release_date ? release_date.substring(0,4) : null;\r\n        const imgUrl = `http://image.tmdb.org/t/p/w1280/${backdrop_path}`;\r\n        const backdropStyle = {\r\n            backgroundImage: `url(${imgUrl})`\r\n        };\r\n\r\n        const { isLoading } = this.state;\r\n        return <div>\r\n            {\r\n        isLoading ? <LoadingMovie /> : \r\n        <div className=\"movie-page\">\r\n            <div className=\"movie-image\" style={backdropStyle} />\r\n            <div className=\"movie-details\">\r\n                <h1>\r\n                    {title}\r\n                    <span>({releaseYear})</span>\r\n                </h1>\r\n                <section className=\"genres\">\r\n                    {\r\n                        genres.map((genre, index) => (\r\n                            <div key={genre.id}>\r\n                                <span>{genre.name}</span>\r\n                                {index < genres.length -1 && (\r\n                                    <span className=\"separator\">|</span>\r\n                                )}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </section>\r\n                <h5>\r\n                    Rating:\r\n                    <span>{vote_average}</span>\r\n                </h5>\r\n                <h5>\r\n                    Runtime:\r\n                    <span>{`${runtime} min`}</span>\r\n                </h5>\r\n                <h4> Overview</h4>\r\n                <p>{overview}</p>\r\n                <div style={{backgroundImage: `url(http://image.tmdb.org/t/p/w1280//5BwqwxMEjeFtdknRV792Svo0K1v.jpg)`}}></div>\r\n            </div>\r\n        </div>\r\n        }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}